openapi: 3.0.3
info:
  title: Rede Social
  version: 1.0.0
  description: 'Api generica que permite que voce crie sua propria rede social '
paths:
  /api/comment/{id}/:
    get:
      operationId: api_comment_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentarySerializers'
          description: ''
    post:
      operationId: api_comment_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentarySerializers'
          description: ''
  /api/commentary/{id}/:
    get:
      operationId: api_commentary_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentarySerializers'
          description: ''
    put:
      operationId: api_commentary_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentarySerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentarySerializers'
          description: ''
    patch:
      operationId: api_commentary_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentarySerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentarySerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentarySerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentarySerializers'
          description: ''
    delete:
      operationId: api_commentary_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/follow/{id}/:
    post:
      operationId: api_follow_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Follower'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Follower'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Follower'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Follower'
          description: ''
    delete:
      operationId: api_follow_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/friendship/:
    get:
      operationId: api_friendship_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendsRetriever'
          description: ''
  /api/friendship/{id}/:
    post:
      operationId: api_friendship_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendShip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendShip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendShip'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendShip'
          description: ''
    delete:
      operationId: api_friendship_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/friendship/requests/:
    get:
      operationId: api_friendship_requests_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendsShipRetriever'
          description: ''
  /api/friendship/requests/{id}/:
    post:
      operationId: api_friendship_requests_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFriendshipStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateFriendshipStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateFriendshipStatus'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFriendshipStatus'
          description: ''
    delete:
      operationId: api_friendship_requests_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/like/{id}/:
    post:
      operationId: api_like_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikeSerializar'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LikeSerializar'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LikeSerializar'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeSerializar'
          description: ''
    delete:
      operationId: api_like_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/post/:
    get:
      operationId: api_post_list
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostSerializers'
          description: ''
    post:
      operationId: api_post_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
  /api/post/{post_id}/:
    get:
      operationId: api_post_retrieve
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    put:
      operationId: api_post_update
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostSerializers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    patch:
      operationId: api_post_partial_update
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostSerializers'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSerializers'
          description: ''
    delete:
      operationId: api_post_destroy
      parameters:
      - in: path
        name: post_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/refresh/:
    post:
      operationId: api_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/:
    get:
      operationId: api_user_list
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_user_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/{user_id}/:
    get:
      operationId: api_user_retrieve
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_user_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_user_partial_update
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_user_destroy
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    CommentarySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        user_id:
          type: integer
          readOnly: true
        post_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - id
      - post_id
      - user_id
    Follower:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        followed:
          type: integer
          readOnly: true
        follower:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - followed
      - follower
      - id
    FriendShip:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        friend_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - friend_id
      - id
      - user_id
    FriendsRetriever:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - username
    FriendsShipRetriever:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
          readOnly: true
        username:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - user_id
      - username
    LikeSerializar:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        post:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - post
      - user
    PatchedCommentarySerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
        user_id:
          type: integer
          readOnly: true
        post_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedPostSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        content:
          type: string
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        user_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
          readOnly: true
    PostSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 50
        content:
          type: string
        privacy:
          $ref: '#/components/schemas/PrivacyEnum'
        user_id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - content
      - created_at
      - id
      - title
      - user_id
    PrivacyEnum:
      enum:
      - Public
      - Private
      type: string
      description: |-
        * `Public` - Public Privacy
        * `Private` - Private Privacy
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UpdateFriendshipStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - email
      - id
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
